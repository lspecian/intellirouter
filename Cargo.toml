[workspace]
members = [
    ".",
    "intellirouter-test-utils",
]

[package]
name = "intellirouter"
version = "0.1.0"
edition = "2021"
authors = ["IntelliRouter Team"]
description = "A flexible LLM orchestration system with intelligent routing between multiple LLM backends"
repository = "https://github.com/intellirouter/intellirouter"
license = "MIT OR Apache-2.0"
keywords = ["llm", "ai", "orchestration", "routing"]
categories = ["ai", "web-programming"]
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# No direct dependency on intellirouter-test-utils to avoid circular dependency

# HTTP server
axum = { version = "0.8.4", features = ["ws", "macros"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["trace", "cors", "fs"] }
hyper = { version = "1.0", features = ["server"] }

# Configuration
config = "0.13"
dotenv = "0.15"
toml = "0.8"

# CLI argument parsing
clap = { version = "4.4", features = ["derive"] }

# Serialization/deserialization
serde = { version = "1.0", features = ["derive"] }

# JSON serialization/deserialization
serde_json = "1.0"

# Async runtime
tokio = { version = "1.35", features = ["full"] }
tokio-stream = "0.1"

# Futures
futures = "0.3"
async-trait = "0.1"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Metrics
metrics = "0.21"
metrics-exporter-prometheus = "0.12"

# gRPC
tonic = { version = "0.10", features = ["tls", "tls-roots"] }
prost = "0.12"

# Redis
redis = { version = "0.21", features = ["tokio-comp", "connection-manager"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Date and time
chrono = { version = "0.4", features = ["serde"] }

# UUID generation
uuid = { version = "1.6", features = ["v4"] }

# Concurrent data structures
dashmap = "5.5"
lru = "0.12"

# Random number generation
rand = "0.8"

# CPU information
num_cpus = "1.16"

# HTTP client
reqwest = { version = "0.11", features = ["json", "stream"] }

# Templating
handlebars = "4.5"

# Security
jsonwebtoken = "9.2"
rustls = "0.21"
rustls-pemfile = "1.0"
native-tls = "0.2"
regex = "1.10"

# System information
sys-info = "0.9"

# Plugin system
libloading = "0.8"
semver = "1.0"

# Visualization
plotters = "0.3.5"
wkhtmltopdf = { version = "0.4.0", optional = true }

# JSON Schema validation
jsonschema = "0.17"

# XML parsing
roxmltree = "0.18"

# YAML parsing
serde_yaml = "0.9"

# Prometheus metrics
prometheus = "0.13"

[dev-dependencies]
# Testing
mockall = "0.12"
test-case = "3.3"
tokio-test = "0.4"
proptest = "1.4"
quickcheck = "1.0"
quickcheck_macros = "1.0"
rstest = "0.18"
fake = "2.9"
criterion = "0.5"
mockito = "1.2"
tempfile = "3.10"
intellirouter-test-utils = { path = "./intellirouter-test-utils" }

# Test coverage
cargo-tarpaulin = "0.27"
grcov = "0.8"

[build-dependencies]
tonic-build = "0.10"

[features]
default = ["memory-backend"]
redis-backend = []  # Now available with redis dependency
file-backend = []
memory-backend = []
pdf-export = ["wkhtmltopdf"]  # Feature for PDF export functionality
test-utils = []  # Feature for test utilities in the main codebase
test-harness = []  # Feature for test harness functionality
production = ["memory-backend"]  # Feature flag for production builds (excludes test code)

[[example]]
name = "basic_usage"
path = "examples/rust/basic_usage.rs"

[[example]]
name = "secure_ipc"
path = "examples/rust/secure_ipc.rs"

[[example]]
name = "telemetry_example"
path = "examples/rust/telemetry_example.rs"

[[example]]
name = "assertion_example"
path = "examples/rust/assertion_example.rs"

[[example]]
name = "benchmark_example"
path = "examples/rust/benchmark_example.rs"

[[example]]
name = "ci_example"
path = "examples/rust/ci_example.rs"

[[example]]
name = "dashboard_example"
path = "examples/rust/dashboard_example.rs"

[[example]]
name = "docs_example"
path = "examples/rust/docs_example.rs"

[[example]]
name = "mock_example"
path = "examples/rust/mock_example.rs"

[[example]]
name = "reporting_example"
path = "examples/rust/reporting_example.rs"

[[example]]
name = "security_example"
path = "examples/rust/security_example.rs"

[[example]]
name = "test_data_example"
path = "examples/rust/test_data_example.rs"

[[example]]
name = "test_harness_example"
path = "examples/rust/test_harness_example.rs"

[[example]]
name = "training_example"
path = "examples/rust/training_example.rs"

[[example]]
name = "workshop_example"
path = "examples/rust/workshop_example.rs"

[[test]]
name = "test_compilation_check"
path = "tests/compilation_tools/test_compilation_check.rs"
required-features = ["test-utils"]

[[test]]
name = "e2e_tests"
path = "tests/e2e_tests.rs"
required-features = ["test-utils"]

[[bin]]
name = "run_tests"
path = "tests/bin/run_tests.rs"
required-features = ["test-utils"]

[[bin]]
name = "test_client"
path = "src/bin/test_client.rs"
required-features = ["test-utils"]
